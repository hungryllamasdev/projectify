generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)

  projectAssignments ProjectAssignment[]
  
  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  startDate   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  members     ProjectAssignment[]
  tasks       Task[]

  @@map("projects")
}

model ProjectAssignment {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  role      ProjectRole @default(MEMBER)
  joinedAt  DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
  @@map("project_assignments")
}

enum ProjectRole {
  OWNER
  MEMBER
  VIEWER
}

model Task {
  id          String       @id @default(cuid())
  projectID   String
  title       String
  type        TaskType
  description String?
  status      TaskStatus   @default(TODO)
  isCompleted Boolean      @default(false)
  isPinned    Boolean      @default(false)
  priority    TaskPriority
  dueDate     DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  project Project @relation(fields: [projectID], references: [id])

  @@map("tasks")
}

enum TaskType {
  FEATURE
  BUG
  TASK
}

enum TaskStatus {
  BACKLOG
  TODO
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  HIGH
  MEDIUM
  LOW
}